drop database if exists task_2;
create database task_2;
use task_2;

drop table if exists Продукты;
drop table if exists Рецепты_блюд;
drop table if exists Ингредиенты;
drop table if exists Ингредиенты1;

# 1	Создать представленные выше таблицы, индексы по первичным и родительским ключам.
create table Продукты(
	НомерПозиции int primary key,
	Наименование_продукта varchar(20),
	Единицы_измерения varchar(10)
);

create table Рецепты_блюд(
	НомерРецепта int primary key,
	Название_блюда varchar(30)
);

create table Ингредиенты(
	НомерРецепта int,
	НоменклатурныйНомер int,
	Количество float,
	primary key(НомерРецепта, НоменклатурныйНомер),
	foreign key (НомерРецепта) references Рецепты_блюд(НомерРецепта) on update cascade on delete cascade,
	foreign key (НоменклатурныйНомер) references Продукты(НомерПозиции) on update cascade on delete cascade
);

create table Ингредиенты1(
	НомерРецепта int,
	НоменклатурныйНомер int,
	Количество float,
	primary key(НомерРецепта, НоменклатурныйНомер),
	foreign key (НомерРецепта) references Рецепты_блюд(НомерРецепта) on update cascade on delete cascade,
	foreign key (НоменклатурныйНомер) references Продукты(НомерПозиции) on update cascade on delete cascade
);

# 3 INSERT INTO – заполнить полученные таблицы данными.
insert into Продукты(НомерПозиции, Наименование_продукта, Единицы_измерения)
values
	(100,'Мидии', 'кг'),
	(101,'Лук', 'кг'),
	(102,'Сыр', 'граммы'),
	(103,'Майонез', 'кг'),
	(105,'Кальмары', 'кг'),
	(106,'Яйцо куриное', 'шт.'),
	(107,'Огурец соленый', 'кг'),
	(108,'Яблоки', 'кг'),
	(109,'Дыня', 'кг');

insert into Рецепты_блюд(НомерРецепта, Название_блюда)
values
	(101, 'Салат с кальмарами'),
	(103, 'Жульен с мидиями');

insert into Ингредиенты
values
	(103, 100, 0.340),
	(103, 101, 0.100),
	(103, 102, 0.080);

insert into Ингредиенты1
values
	(103, 103, 0.100),
	(101, 105, 0.300),
	(101, 106, 3),
	(101, 107, 0.150),
	(101, 108, 0.300);

# 4 INSERT INTO – заполнить таблицу «Ингредиенты» данными из таблицы «Ингре-диенты1»
insert into Ингредиенты select * from Ингредиенты1;

# 5 UPDATE – изменить в поле «№ рецепта» с 101 на 102 во всех таблицах
update Рецепты_блюд
set НомерРецепта = 102
where НомерРецепта = 101;

# 6 DELETE – удалить данных по продукту № позиции 108 из всех таблиц.
delete from Продукты where НомерПозиции = 108;

# 7 DELETE – удалить таблицу «Ингредиенты1».
drop table Ингредиенты1;

# 8. SELECT – вывести на экран записи, содержащие следующие поля: № позиции, Наименование продукта, Единицы измерения для Ингредиентов Блюд, количество которых находится в диапазоне от 0,3 до 2,0.
select НомерПозиции, Наименование_продукта, Единицы_измерения
from Продукты as A
inner join Ингредиенты as B on A.НомерПозиции = B.НоменклатурныйНомер
where Количество between 0.3 and 2.0;

# 9. SELECT –  после задания № рецепта, вывести на экран записи, содержащие следующие поля: № рецепта, Название блюда, Наименование продукта, Единицы измерения, Количество по каждому рецепту.
set @recipe_number = 103;
select A.НомерРецепта, A.Название_блюда, Наименование_продукта, Единицы_измерения, B.Количество
from Рецепты_блюд as A
inner join Ингредиенты as B on A.НомерРецепта = B.НомерРецепта
inner join Продукты as C on B.НоменклатурныйНомер = C.НомерПозиции
where A.НомерРецепта = @recipe_number;

# 10. SELECT – вывести на экран записи, содержащие следующие поля: № позиции, Наименование продукта, Единицы измерения для всех продуктов, которые не используются ни в одном рецепте.
select НомерПозиции, Наименование_продукта, Единицы_измерения
from Продукты A
left join Ингредиенты B on A.НомерПозиции = B.НоменклатурныйНомер
where B.НоменклатурныйНомер is null;
# или
select НомерПозиции, Наименование_продукта, Единицы_измерения
from Продукты A
where not exists(select * from Ингредиенты where НоменклатурныйНомер = A.НомерПозиции);

# 11. SELECT – вывести на экран записи, содержащие следующие поля: № рецепта, Наименование блюда, Количество ингредиентов, которое входят в данное блюдо, если это количество не меньше трех.
select A.НомерРецепта, Название_блюда, count(НоменклатурныйНомер) as `Количество ингредиентов`
from Рецепты_блюд A
inner join Ингредиенты B on A.НомерРецепта = B.НомерРецепта
group by A.НомерРецепта
having `Количество ингредиентов` >= 3;

# 12. SELECT –  вывести на экран запись – среднее количество ингредиентов, которое входит в рецепт блюда.
select A.НомерРецепта, avg(Количество) as `Количество ингредиентов`
from Рецепты_блюд A
inner join Ингредиенты B on A.НомерРецепта = B.НомерРецепта
group by A.НомерРецепта;

# 13. SELECT – вывести на экран записи, содержащие следующие поля: № позиции, Наименование продукта, Единицы измерения, Количество рецептов, в которое входит данный продукт.
select A.НомерПозиции, Наименование_продукта, Единицы_измерения, count(НомерРецепта) as `Количество рецептов`
from Продукты A
inner join Ингредиенты B on A.НомерПозиции = B.НоменклатурныйНомер
group by A.НомерПозиции;

# 14. SELECT –  вывести на экран запись, содержащую следующие поля: № рецепта, Наименование блюда, Количество ингредиентов для рецептов, содержащих максимальное количество ингредиентов
select НомерРецепта, Название_блюда, max(`Количество ингредиентов`)
from(
	select A.НомерРецепта, Название_блюда, count(НоменклатурныйНомер) as `Количество ингредиентов`
	from Рецепты_блюд A
	inner join Ингредиенты B on A.НомерРецепта = B.НомерРецепта
	group by A.НомерРецепта
) as temp;
# или
select НомерРецепта, Название_блюда, `Количество ингредиентов`
from(
	select A.НомерРецепта, Название_блюда, count(НоменклатурныйНомер) as `Количество ингредиентов`
	from Рецепты_блюд A
	inner join Ингредиенты B on A.НомерРецепта = B.НомерРецепта
	group by A.НомерРецепта
) as temp
having max(`Количество ингредиентов`);